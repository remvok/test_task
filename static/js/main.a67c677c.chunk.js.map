{"version":3,"sources":["redux/authStorage.js","redux/config.js","redux/reducers/me.resource.js","redux/reducers/helper.js","Public/Pages/MainPage.jsx","Public/Pages/Page404.jsx","Public/Pages/Page500.jsx","redux/reducers/users.js","redux/reducers/globalAuth.js","helpers/customMessage.js","helpers/main.js","Public/Pages/Auth/SingInForm.jsx","Public/Pages/Auth/SignIn.jsx","Public/Pages/Auth/SingUpForm.jsx","Public/Pages/Auth/SignUp.jsx","Dashboard/Pages/Dashboard.jsx","Dashboard/DashboardRouter.js","Dashboard/App.js","Public/SiteRouter.js","Public/App.js","router.js","redux/reducers/pagination.reducer.js","redux/reducers.js","redux/store.jsx","redux/crashReporter.js","App.js","serviceWorker.js","index.js"],"names":["getAuthData","JSON","parse","localStorage","getItem","clearAuthData","removeItem","defaultHeaders","Authorization","reSetAuthToken","Object","assign","accessToken","apiUrl","process","REACT_APP_API_URL","createResource","name","url","actions","get","transformResponse","res","body","update","method","reduce","state","action","status","defaultReducers","item","getReducer","clear","isPure","types","rootReducer","MainPage","this","props","getMe","me","prevProps","prevState","snapshot","history","push","href","Component","withRouter","connect","reducerMe","meActions","Page404","Page500","setAuthHeader","withSaveTokens","data","setItem","stringify","saveAuthData","login","isAuth","refresh","create","register","logout","refreshTokenPromise","duration","msg","type","msgType","message","className","content","showErrorNotifications","error","customMessage","layout","labelCol","span","wrapperCol","SingInForm","handleSubmit","initialValues","remember","onFinish","values","email","password","then","window","location","catch","e","Item","rules","required","placeholder","Password","htmlType","SignIn","loginUser","to","userActions","SingUpForm","handleSuccess","validator","rule","value","callback","regExpLetters","RegExp","regExpDigits","length","test","SignUp","registerUser","UserActions","Dashboard","logoutUser","rel","onClick","DashboardRouter","exact","path","React","DashApp","SiteRouter","App","NOOP","PATH_THROUGH_REQUEST_REGEXP","PrivateRoute","children","rest","render","pathname","from","defaultGlobals","fetch","args","apply","response","refreshToken","userId","refreshUser","document","Promise","reject","SiteRoute","initialState","reducerUsers","pagination","resourceName","createBrowserHistory","getUserConfirmation","confirm","reducer","combineReducers","reducers","store","createStore","compose","applyMiddleware","thunk","next","startsWith","code","err","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.a67c677c.chunk.js","sourcesContent":["import { defaultHeaders } from \"redux-rest-resource\";\n\nexport const getAuthData = () =>\n  JSON.parse(localStorage.getItem(\"authData\") || '{}');\n\nexport const saveAuthData = (data) => {\n  const { accessToken } = data;\n  Object.assign(defaultHeaders, { Authorization: accessToken });\n  return localStorage.setItem(\n    \"authData\",\n    JSON.stringify(data)\n  );\n};\n\nexport const clearAuthData = () => {\n  localStorage.removeItem(\"authData\");\n  delete defaultHeaders.Authorization;\n};\n\nexport const hasAuthData = () =>\n  !!getAuthData().accessToken;\n\nexport const reSetAuthToken = () => {\n  Object.assign(defaultHeaders, { Authorization: getAuthData().accessToken });\n};\n","const apiUrl = process.env.REACT_APP_API_URL;\nconst siteUrl = process.env.REACT_APP_SITE_URL;\n\nexport { apiUrl, siteUrl };\n","import { createResource } from \"redux-rest-resource\";\nimport { apiUrl } from \"../config\";\nimport { getReducer } from \"./helper\";\n\nexport const { types, actions, rootReducer } = createResource({\n  name: \"me\",\n  url: `${apiUrl}/api/me`,\n  actions: {\n    get: {\n      transformResponse: (res) => ({ body: res.body }),\n    },\n    update: {\n      method: \"PATCH\",\n      reduce: (state, action) => getReducer(state, action),\n    },\n    clear: {\n      isPure: true,\n      reduce: (state) => ({ ...state, item: null }),\n    },\n  },\n});\n","import { defaultReducers } from \"redux-rest-resource/lib/reducers\";\n\nexport const getReducer = (state, action) =>\n  action.status === \"resolved\"\n    ? { ...defaultReducers.get(state, action), item: action.body }\n    : defaultReducers.get(state, action);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { actions as meActions } from \"../../redux/reducers/me.resource\";\n\nclass MainPage extends Component {\n  state = {};\n\n  componentDidMount() {\n    const { getMe, me } = this.props;\n    if (!me) {\n      getMe();\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { history, me } = this.props;\n    if (me) {\n      history.push(\"/dashboard\");\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Welcome</h1>\n        <div>\n          <a href=\"/signin\">Sign in</a>\n        </div>\n        <div>\n          <a href=\"/signup\">Sign up</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({ me: state.reducerMe.item });\nexport default withRouter(\n  connect(mapStateToProps, {\n    ...meActions,\n  })(MainPage)\n);\n","import React, { Component } from \"react\";\n\nclass Page404 extends Component {\n  state = {};\n\n  render() {\n    return (\n      <div>\n        <h1>Page not found</h1>\n      </div>\n    );\n  }\n}\n\nexport default Page404;\n","import React, { Component } from \"react\";\n\nclass Page500 extends Component {\n  state = {};\n\n  render() {\n    return (\n      <div>\n        <h1>Error500</h1>\n      </div>\n    );\n  }\n}\n\nexport default Page500;\n","import { createResource, defaultHeaders } from \"redux-rest-resource\";\nimport { apiUrl } from \"../config\";\nimport { clearAuthData, getAuthData, saveAuthData } from \"../authStorage\";\n\nconst setAuthHeader = (accessToken) => {\n  Object.assign(defaultHeaders, {\n    Authorization: accessToken,\n  });\n};\n\nconst withSaveTokens = (res) => {\n  setAuthHeader(res.body.accessToken);\n  saveAuthData(res.body);\n  return {\n    res,\n    body: res.body,\n  };\n};\n\nexport const { types, actions, rootReducer } = createResource({\n  name: \"user\",\n  url: `${apiUrl}/api/sign-in`,\n  actions: {\n    login: {\n      method: \"POST\",\n      transformResponse: withSaveTokens,\n      reduce: (state) => {\n        return {\n          ...state,\n          isAuth: true,\n        };\n      },\n    },\n\n    refresh: {\n      method: \"POST\",\n      url: `${apiUrl}/api/auth-token-refresh`,\n      transformResponse: withSaveTokens,\n    },\n\n    create: {\n      method: \"POST\",\n      transformResponse: withSaveTokens,\n    },\n\n    register: {\n      method: \"POST\",\n      url: `${apiUrl}/api/sign-up`,\n      transformResponse: (res) => ({\n        data: res.body,\n      }),\n    },\n\n    logout: {\n      url: `${apiUrl}/api/logout`,\n      // isPure: true,\n      method: \"POST\",\n      reduce: (state) => {\n        clearAuthData();\n        return {\n          ...state,\n          item: null,\n        };\n      },\n    },\n  },\n});\n\nsetAuthHeader(getAuthData().accessToken);\n","import { defaultGlobals } from \"redux-rest-resource\";\nimport { actions } from \"./users\";\nimport { getAuthData, clearAuthData } from \"../authStorage\";\n\nconst NOOP = () => {};\nconst PATH_THROUGH_REQUEST_REGEXP = /\\/(auth-token-refresh|sign-in|forgot-password|reset-password|users)/i;\n\nlet refreshTokenPromise;\nObject.assign(defaultGlobals, {\n  fetch: (...args) =>\n    fetch.apply(this, args).then((response) => {\n      if (\n        response.status !== 401 ||\n        PATH_THROUGH_REQUEST_REGEXP.test(response.url)\n      ) {\n        return response;\n      }\n      const { refreshToken, userId } = getAuthData();\n      if (!(refreshToken && userId)) {\n        return Promise.reject(response);\n      }\n\n      if (refreshTokenPromise) {\n        return refreshTokenPromise;\n      }\n      refreshTokenPromise = actions\n        .refreshUser({ refreshToken, userId })(NOOP)\n        .then((res) => {\n          refreshTokenPromise = null;\n          return res;\n        })\n        .catch((response) => {\n          clearAuthData();\n          document.location.href = \"/signin\";\n          return Promise.reject(response);\n        })\n        .then(() => fetch.apply(this, args));\n\n      return refreshTokenPromise;\n    }),\n});\n","import { message } from \"antd\";\n\nexport default ({ duration = 10, msg, type }) => {\n  const msgType = message[type] ? type : \"info\";\n  message[msgType]({ className: \"error-message\", content: msg, duration });\n};\n","import customMessage from \"./customMessage\";\n\nconst showErrorNotifications = (error) => {\n  const msg =\n    error.body && error.body.message ? error.body.message : \"Unknown error\";\n  customMessage({ msg, type: \"error\" });\n};\n\nexport { showErrorNotifications };\n","import React from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { showErrorNotifications } from \"../../../helpers/main\";\n\nconst layout = {\n  labelCol: { span: 10 },\n  layout: \"vertical\",\n  wrapperCol: { span: 24 },\n};\n\nconst SingInForm = ({ handleSubmit }) => {\n  const onFinish = (values) => {\n    const data = {};\n    data.email = values.email;\n    data.password = values.password;\n    handleSubmit(data)\n      .then((res) => {\n        window.location.href = \"/dashboard\";\n      })\n      .catch((e) => {\n        showErrorNotifications(e);\n      });\n  };\n\n  return (\n    <Form\n      {...layout}\n      name=\"basic\"\n      initialValues={{ remember: true }}\n      onFinish={onFinish}\n    >\n      <Form.Item\n        name=\"email\"\n        rules={[{ required: true, message: \"Please input your Email!\" }]}\n      >\n        <Input placeholder=\"Email\" />\n      </Form.Item>\n\n      <Form.Item\n        name=\"password\"\n        rules={[{ required: true, message: \"Please input your password!\" }]}\n      >\n        <Input.Password placeholder=\"Password\" />\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default SingInForm;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { actions as userActions } from \"../../../redux/reducers/users\";\nimport { actions as meActions } from \"../../../redux/reducers/me.resource\";\nimport \"./index.scss\";\nimport SingInForm from \"./SingInForm\";\n\nclass SignIn extends Component {\n  state = {};\n\n  componentDidMount() {\n    const { getMe, me } = this.props;\n    if (!me) {\n      getMe();\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { history, me } = this.props;\n    if (me) {\n      history.push(\"/dashboard\");\n    }\n  }\n\n  render() {\n    const { loginUser } = this.props;\n    return (\n      <div className=\"login-form-wrapper\">\n        <h1>Sign in</h1>\n        <SingInForm handleSubmit={loginUser} />\n        <Link to=\"/signup\">Click here to sign up</Link>\n      </div>\n    );\n  }\n}\n\n// eslint-disable-next-line no-unused-vars\nconst mapStateToProps = (state) => ({ me: state.reducerMe.item });\nexport default withRouter(\n  connect(mapStateToProps, {\n    ...meActions,\n    ...userActions,\n  })(SignIn)\n);\n","import React from \"react\";\nimport { Form, Input, Button, Row, Col } from \"antd\";\nimport { showErrorNotifications } from \"../../../helpers/main\";\n\nconst layout = {\n  labelCol: { span: 8 },\n  layout: \"vertical\",\n  wrapperCol: { span: 24 },\n};\n\nconst SingUpForm = ({ handleSubmit, handleSuccess }) => {\n  const onFinish = (values) => {\n    handleSubmit(values)\n      .then(() => {\n        handleSuccess();\n      })\n      .catch((e) => {\n        showErrorNotifications(e);\n      });\n  };\n\n  const validatePassword = (rule, value, callback) => {\n    const regExpLetters = new RegExp(\"[a-zA-Z]\");\n    const regExpDigits = new RegExp(\"[0-9]\");\n    if (\n      value.length > 6 &&\n      regExpLetters.test(value) &&\n      regExpDigits.test(value)\n    ) {\n      callback();\n    } else {\n      callback(\"Error!\");\n    }\n  };\n\n  return (\n    <Form\n      {...layout}\n      name=\"basic\"\n      initialValues={{ remember: true }}\n      onFinish={onFinish}\n    >\n      <Row>\n        <Col className=\"sign-up-first-name\" span={12}>\n          <Form.Item\n            name=\"firstName\"\n            rules={[{ required: true, message: \"First Name is required!\" }]}\n          >\n            <Input placeholder=\"First Name\" />\n          </Form.Item>\n        </Col>\n        <Col className=\"sign-up-last-name\" span={12}>\n          <Form.Item\n            name=\"lastName\"\n            rules={[{ required: true, message: \"Last Name is required!\" }]}\n          >\n            <Input placeholder=\"Last Name\" />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}>\n          <Form.Item\n            name=\"email\"\n            rules={[\n              {\n                required: true,\n                message: \"Email is required!\",\n              },\n              {\n                type: \"email\",\n                message: \"Invalid Email!\",\n              },\n            ]}\n          >\n            <Input placeholder=\"Email address\" />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}>\n          <Form.Item\n            name=\"password\"\n            rules={[\n              { required: true, message: \"Password is required!\" },\n              {\n                message: \"Al least 7 chars contains letters and numbers\",\n                validator: validatePassword,\n              },\n            ]}\n          >\n            <Input.Password placeholder=\"Password\" />\n          </Form.Item>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Sign up\n            </Button>\n          </Form.Item>\n        </Col>\n      </Row>\n    </Form>\n  );\n};\n\nexport default SingUpForm;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { actions as meActions } from \"../../../redux/reducers/me.resource\";\nimport { actions as UserActions } from \"../../../redux/reducers/users\";\nimport \"./index.scss\";\nimport SingUpForm from \"./SingUpForm\";\nimport customMessage from \"../../../helpers/customMessage\";\n\nclass SignUp extends Component {\n  state = {};\n\n  componentDidMount() {\n    const { getMe, me } = this.props;\n    if (!me) {\n      getMe();\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const { history, me } = this.props;\n    if (me) {\n      history.push(\"/dashboard\");\n    }\n  }\n\n  handleSuccess = () => {\n    const { history } = this.props;\n    customMessage({ msg: \"Successful sign up!\", type: \"info\", duration: 10 });\n    history.push(\"/signin\");\n  };\n\n  render() {\n    const { registerUser } = this.props;\n    return (\n      <div className=\"login-form-wrapper\">\n        <h1>Sign up</h1>\n        <SingUpForm\n          handleSubmit={registerUser}\n          handleSuccess={this.handleSuccess}\n        />\n        Already have an account? <Link to=\"/signin\">Login</Link>\n      </div>\n    );\n  }\n}\n\n// eslint-disable-next-line no-unused-vars\nconst mapStateToProps = (state) => ({ me: state.reducerMe.item });\nexport default withRouter(\n  connect(mapStateToProps, {\n    ...meActions,\n    ...UserActions,\n  })(SignUp)\n);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { actions as userActions } from \"../../redux/reducers/users\";\n\nclass Dashboard extends Component {\n  state = {};\n\n  logout = () => {\n    const { logoutUser } = this.props;\n    logoutUser();\n  };\n\n  render() {\n    return (\n      <div>\n        <div>Welcome to dashboard!</div>\n        <a rel=\"noopener noreferrer\" onClick={this.logout} href=\"/signin\">\n          Logout\n        </a>\n      </div>\n    );\n  }\n}\n\n// eslint-disable-next-line no-unused-vars\nconst mapStateToProps = (state) => ({});\nexport default withRouter(\n  connect(mapStateToProps, {\n    ...userActions,\n  })(Dashboard)\n);\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { Page404, Page500 } from \"../Public/Pages\";\nimport { Dashboard } from \"./Pages\";\n\nclass DashboardRouter extends React.Component {\n  state = {};\n\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/dashboard/404\">\n          <Page404 />\n        </Route>\n        <Route exact path=\"/dashboard/500\">\n          <Page500 />\n        </Route>\n        <Route exact path=\"/dashboard\">\n          <Dashboard />\n        </Route>\n      </Switch>\n    );\n  }\n}\n\nexport default DashboardRouter;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Spin } from \"antd\";\nimport { withRouter } from \"react-router-dom\";\nimport { actions as meActions } from \"../redux/reducers/me.resource\";\nimport DashboardRouter from \"./DashboardRouter\";\n\nexport class DashApp extends Component {\n  state = {};\n\n  async componentDidMount() {\n    const { getMe } = this.props;\n    await getMe();\n  }\n\n  render() {\n    const { isAuth, me } = this.props;\n    if (!me) {\n      return <Spin />;\n    }\n    return <DashboardRouter isAuth={isAuth} />;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    me: state.reducerMe.item,\n  };\n};\nexport default withRouter(connect(mapStateToProps, { ...meActions })(DashApp));\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport { MainPage, Page404, Page500, SignIn, SignUp } from \"./Pages\";\n\nclass SiteRouter extends React.Component {\n  state = {};\n\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/signin\">\n          <SignIn />\n        </Route>\n        <Route exact path=\"/signup\">\n          <SignUp />\n        </Route>\n        <Route exact path=\"/\">\n          <MainPage />\n        </Route>\n        <Route exact path=\"/404\">\n          <Page404 />\n        </Route>\n        <Route exact path=\"/500\">\n          <Page500 />\n        </Route>\n        <Route path=\"*\">\n          <Page404 />\n        </Route>\n      </Switch>\n    );\n  }\n}\n\nexport default SiteRouter;\n","import React, { Component } from \"react\";\nimport \"./Styles/index.scss\";\nimport SiteRouter from \"./SiteRouter\";\n\nexport class App extends Component {\n  render() {\n    const { isAuth } = this.props;\n    return (\n      <div className=\"site-wrapper\">\n        <SiteRouter isAuth={isAuth} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport { hasAuthData, reSetAuthToken } from \"./redux/authStorage\";\nimport DashApp from \"./Dashboard/App\";\nimport App from \"./Public/App\";\nimport \"./redux/reducers/globalAuth\";\n\nfunction PrivateRoute({ children, isAuth, ...rest }) {\n  reSetAuthToken();\n  return (\n    <Route\n      // eslint-disable-next-line\n      {...rest}\n      render={\n        // eslint-disable-next-line\n        ({ location }) =>\n          isAuth ? (\n            children\n          ) : (\n            <Redirect\n              to={{\n                pathname: \"/signin\",\n                state: { from: location },\n              }}\n            />\n          )\n      }\n    />\n  );\n}\n\n// eslint-disable-next-line\nconst SiteRoute = ({ children, isAuth, ...rest }) => {\n  reSetAuthToken();\n  return (\n    <Route\n      // eslint-disable-next-line\n      {...rest}\n      // eslint-disable-next-line\n      render={({ location }) => children}\n    />\n  );\n};\n\nconst Routes = ({ history, isAuth }) => (\n  <Router history={history}>\n    <Switch>\n      <PrivateRoute exact path=\"/dashboard*\" isAuth={isAuth}>\n        <DashApp isAuth={isAuth} />\n      </PrivateRoute>\n      <SiteRoute exact path=\"/*\" isAuth={isAuth}>\n        <App isAuth={isAuth} />\n      </SiteRoute>\n    </Switch>\n  </Router>\n);\n\n// eslint-disable-next-line no-unused-vars\nconst mapStateToProps = (state) => ({\n  isAuth: hasAuthData(),\n});\nexport default connect(mapStateToProps, {})(Routes);\n","const initialState = {};\nconst totalResults = (state = initialState, action) => {\n  if (action.status === \"resolved\" && action.pagination) {\n    return Object.assign({}, state, {\n      [action.pagination.resourceName]: action.pagination,\n    });\n  }\n  return state;\n};\n\nexport default totalResults;\n","import pagination from \"./reducers/pagination.reducer\";\nimport { rootReducer as reducerUsers } from \"./reducers/users\";\nimport { rootReducer as reducerMe } from \"./reducers/me.resource\";\n\nexport default {\n  reducerMe,\n  reducerUsers,\n  pagination,\n};\n","import { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"../redux/reducers\";\nimport { createBrowserHistory } from \"history\";\nimport { crashReporter } from \"./crashReporter\";\n\nconst history = createBrowserHistory({\n  getUserConfirmation: (message, callback) => callback(window.confirm(message)),\n});\n\nconst reducer = combineReducers({\n  ...reducers,\n});\nconst store = createStore(\n  reducer,\n  compose(applyMiddleware(...[thunk, crashReporter]))\n);\n\nexport { store, history };\n","export const crashReporter = (store) => (next) => (action) => {\n  try {\n    if (action.type.startsWith(\"@@resource\")) {\n      if (action.code === 404) {\n        return;\n      }\n      if (action.code === 404 || action.code >= 500) {\n        return;\n      }\n      if (action.code === 403) {\n        return;\n      }\n    }\n    return next(action);\n  } catch (err) {\n    throw err;\n  }\n};\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport Routes from \"./router\";\nimport { store, history } from \"./redux/store\";\nimport \"./App.css\";\nimport \"antd/dist/antd.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Routes history={history} />\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}